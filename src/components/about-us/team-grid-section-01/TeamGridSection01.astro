---
import { convertToWebP } from "../../../utils/imageConvert";

const { title, description, profile_cards = [], styling = [] } = Astro.props;

// Extract styling properties
const padding_top = styling?.[0]?.padding_top || "md";
const padding_bottom = styling?.[0]?.padding_bottom || "md";
const padding_left = styling?.[0]?.padding_left || "xs";
const padding_right = styling?.[0]?.padding_right || "xs";
const mobile_padding_top = styling?.[0]?.mobile_padding_top || "xs";
const mobile_padding_bottom = styling?.[0]?.mobile_padding_bottom || "xs";
const mobile_padding_left = styling?.[0]?.mobile_padding_left || "xs";
const mobile_padding_right = styling?.[0]?.mobile_padding_right || "xs";
const background_color = styling?.[0]?.background_color || "";
const max_width = styling?.[0]?.max_width || "1520";

// Create CSS classes
const padding_classes = `
  pt-${mobile_padding_top} pb-${mobile_padding_bottom}
  pl-${mobile_padding_left} pr-${mobile_padding_right}
  lg:pt-${padding_top} lg:pb-${padding_bottom}
  lg:pl-${padding_left} lg:pr-${padding_right}
`;

const bg_color_class = background_color ? `bg-${background_color}` : "";
const max_width_class = max_width ? `max-w-[${max_width}px]` : "";
---

<section class={`relative ${padding_classes} ${bg_color_class}`}>
  <div class={`mx-auto ${max_width_class} px-4`}>
    <!-- Header Section -->
    <div class="text-center mb-12 lg:mb-16">
      <h2 class="ds-h3 mb-6">{title}</h2>
      <p class="ds-p-2 mx-auto max-w-3xl">{description}</p>
    </div>

    <!-- Team Grid -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-20">
      {profile_cards.map((card) => (
        <div class="text-center mb-8">
          <!-- Profile Image -->
          <div class="mb-4 w-full h-[335px]">
            {card.image?.filename ? (
              <img
                src={convertToWebP(card.image.filename)}
                alt={card.image.alt || `Photo of ${card.name}`}
                class="w-full h-full object-cover object-top"
              />
            ) : (
              <div class="w-full h-full border border-gray-200 p-8 flex items-center justify-center">
                <svg class="w-full h-full text-gray-200" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" fill="currentColor" viewBox="0 0 640 512">
                  <path d="M480 80C480 35.82 515.8 0 560 0C604.2 0 640 35.82 640 80C640 124.2 604.2 160 560 160C515.8 160 480 124.2 480 80zM0 456.1C0 445.6 2.964 435.3 8.551 426.4L225.3 81.01C231.9 70.42 243.5 64 256 64C268.5 64 280.1 70.42 286.8 81.01L412.7 281.7L460.9 202.7C464.1 196.1 472.2 192 480 192C487.8 192 495 196.1 499.1 202.7L631.1 419.1C636.9 428.6 640 439.7 640 450.9C640 484.6 612.6 512 578.9 512H55.91C25.03 512 0 486.1 0 456.1L0 456.1z" />
                </svg>
              </div>
            )}
          </div>
          
          <h3 class="font-bold ds-p-1 !font-bold">{card.name}</h3>
          <p class="ds-p-2 mb-4">{card.title}</p>
          
          <!-- LinkedIn Link -->
          {card.social_link?.url && (
            <a 
              href={card.social_link.url} 
              target="_blank" 
              rel="noopener noreferrer"
              class="inline-flex items-center underline ds-p-2"
            >
              Connect with {card.name.split(' ')[0]}
              <svg xmlns="http://www.w3.org/2000/svg" class="ml-2" width="17" height="11" viewBox="0 0 17 11" fill="none">
                <path d="M0.941406 5.94189H14.9414M14.9414 5.94189L10.1609 1.44189M14.9414 5.94189L10.1609 10.4419" stroke="black" stroke-width="1.5"/>
                </svg>
            </a>
          )}
        </div>
      ))}
    </div>
  </div>
</section>
