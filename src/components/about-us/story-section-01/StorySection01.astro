---
import { renderRichText } from "@storyblok/astro";
import { convertToWebP } from "../../../utils/imageConvert";

const {
  title,
  description,
  stories = [],
  decorative_image,
  mobile_decorative_image,
  styling = [],
} = Astro.props;

// Parse rich text content if needed
const parsedStories = stories.map((story) => ({
  ...story,
  parsedDescription: renderRichText(story.description),
}));

// Extract styling properties
const padding_top = styling?.[0]?.padding_top || "";
const padding_bottom = styling?.[0]?.padding_bottom || "";
const padding_left = styling?.[0]?.padding_left || "";
const padding_right = styling?.[0]?.padding_right || "";
const mobile_padding_top = styling?.[0]?.mobile_padding_top || "";
const mobile_padding_bottom = styling?.[0]?.mobile_padding_bottom || "";
const mobile_padding_left = styling?.[0]?.mobile_padding_left || "";
const mobile_padding_right = styling?.[0]?.mobile_padding_right || "";
const background_color = styling?.[0]?.background_color || "ds-blue-500";
const shifted_up = styling?.[0]?.shifted_up || "";
const mobile_shifted_up = styling?.[0]?.mobile_shifted_up || "";
const max_width = styling?.[0]?.max_width || "";
const gap = styling?.[0]?.gap || "sm";

// Create CSS classes
const padding_y_classes = `
  pt-${mobile_padding_top} pb-${mobile_padding_bottom}
  lg:pt-${padding_top} lg:pb-${padding_bottom}
`;

const padding_x_classes = `
  pl-${mobile_padding_left} pr-${mobile_padding_right}
  lg:pl-${padding_left} lg:pr-${padding_right}
`;

const bg_color_class = background_color ? `bg-${background_color}` : "";
const shifted_up_class = shifted_up ? `lg:-mt-${shifted_up}` : "";
const mobile_shifted_up_class = mobile_shifted_up
  ? `-mt-${mobile_shifted_up}`
  : "";
const max_width_class = max_width ? `max-w-[${max_width}px]` : "";
---

<section
  class={`relative ${padding_y_classes} ${bg_color_class} ${shifted_up_class} ${mobile_shifted_up_class} z-10`}
>
  <div class={`mx-auto`}>
    <!-- Header Section -->
    <div class={`${padding_x_classes} flex flex-col lg:flex-row justify-between gap-8`}>
      <h2 class="ds-h3 text-center lg:text-left text-ds-white lg:max-w-[30%] lg:max-w-[25%]">{title}</h2>
      <p class="ds-p-2 text-center lg:text-left md:ds-p-1 text-ds-white lg:!font-semibold lg:max-w-[80%] lg:max-w-[55%] lg:mb-0 mb-20">
        {description}
      </p>
    </div>

    <!-- Desktop Layout with Horizontal Arrow -->
    <div class="hidden lg:block relative">
      <!-- Horizontal Arrow Image -->
      {
        decorative_image?.filename && (
          <img
            src={convertToWebP(decorative_image.filename)}
            alt={decorative_image.alt || "Horizontal arrow decoration"}
            class="w-full h-auto z-10"
          />
        )
      }

      <!-- Story Items in Grid -->
      <div class={`flex gap-8 relative px-[5rem] 2xl:px-[7rem] ds-p-2`}>
        <div class="text-ds-white max-w-[18%]">
          <div set:html={parsedStories[0].parsedDescription} />
        </div>
        <div class="text-ds-white max-w-[18%]">
          <div set:html={parsedStories[1].parsedDescription} />
        </div>
        <div class="text-ds-white max-w-[25%]">
          <div set:html={parsedStories[2].parsedDescription} />
        </div>
        <div class="text-ds-white max-w-[39%]">
          <div set:html={parsedStories[3].parsedDescription} />
        </div>
      </div>
    </div>

    <!-- Mobile Layout with Vertical Arrow -->
    <div class={`lg:hidden px-3xs`}>
      <div class="flex gap-4">
        <!-- Vertical Arrow Column -->
        <div>
          {
            mobile_decorative_image?.filename && (
              <img
                src={convertToWebP(mobile_decorative_image.filename)}
                alt={mobile_decorative_image.alt || "Vertical arrow decoration"}
                class="h-[795px] w-[190px] object-cover xs:object-contain"
              />
            )
          }
        </div>

        <!-- Story Content Column -->
        <div class="ds-p-2 mr-2 flex flex-col gap-8">
            <div class="text-ds-white h-[110px] max-h-[110px]">
                <div set:html={parsedStories[0].parsedDescription} />
              </div>
              <div class="text-ds-white h-[90px] max-h-[90px]">
                <div set:html={parsedStories[1].parsedDescription} />
              </div>
              <div class="text-ds-white h-[160px] max-h-[160px]">
                <div set:html={parsedStories[2].parsedDescription} />
              </div>
              <div class="text-ds-white h-[110px] max-h-[110px]">
                <div set:html={parsedStories[3].parsedDescription} />
              </div>
        </div>
      </div>
    </div>
  </div>
</section>
