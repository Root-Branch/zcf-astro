---
import { convertToWebP } from "../../../utils/imageConvert";

const {
  title,
  description,
  info_text,
  cta_button,
  icon_value_pair,
  background_color,
  padding_top,
  padding_bottom,
  mobile_padding_top,
  mobile_padding_bottom,
} = Astro.props;

const background_color_class = background_color ? `bg-${background_color}` : "";
const padding_top_class = padding_top ? `lg:pt-${padding_top}` : "md:pt-16";
const padding_bottom_class = padding_bottom
  ? `lg:pb-${padding_bottom}`
  : "md:pb-32";
const mobile_padding_top_class = mobile_padding_top
  ? `pt-${mobile_padding_top}`
  : "pt-8";
const mobile_padding_bottom_class = mobile_padding_bottom
  ? `pb-${mobile_padding_bottom}`
  : "pb-32";
---

<section
  class={`${padding_top_class} ${padding_bottom_class} ${mobile_padding_top_class} ${mobile_padding_bottom_class} ${background_color_class} -mt-[180px] lg:mt-0`}
>
  <div class={`mx-auto px-8 sm:px-16 md:mt-0`}>
    <div class="flex flex-col items-center text-center text-ds-white">
      <!-- Title and Description -->
      <h2 class="ds-h3 font-bold mb-8">
        {title}
      </h2>
      <p class="ds-p-2 mb-16">
        {description}
      </p>

      <!-- Pricing Icons and Values -->
      <div
        class="flex flex-col md:flex-row items-center justify-center gap-16 md:gap-96 mb-16 relative w-full"
      >
        {
          icon_value_pair?.map((item, index) => (
            <>
              <div
                class={`flex flex-row md:flex-col items-center relative ${index === 0 ? "-ml-[6rem] md:-ml-[8rem]" : "-mr-[6.5rem] md:-mr-[8.5rem]"}`}
              >
                {/* Text for first item - Left aligned */}
                {index === 0 && (
                  <div class="flex-1 text-right pr-4 md:hidden">
                    <p class="ds-h3">{item.value}</p>
                    <p class="ds-p-2">{item.description}</p>
                  </div>
                )}

                {/* Icon */}
                <div class="relative">
                  <img
                    src={convertToWebP(item.icon.filename)}
                    alt={item.description}
                    class="w-16 h-16 md:w-24 md:h-24"
                  />
                  {index === 0 && (
                    <>
                      {/* Desktop horizontal dashed line */}
                      <div class="hidden md:block absolute top-1/2 left-full w-[29rem] -translate-y-1/2">
                        <div class="border-t border-dashed border-ds-white" />
                      </div>

                      {/* Mobile vertical dashed line */}
                      <div class="md:hidden absolute top-full left-1/2 h-[8rem] -translate-x-1/2">
                        <div class="border-l border-dashed border-ds-white h-full" />
                      </div>
                    </>
                  )}
                </div>

                {/* Text for second item - Right aligned */}
                {index === 1 && (
                  <div class="flex-1 text-left pl-4 md:hidden">
                    <p class="ds-h3">{item.value}</p>
                    <p class="ds-p-2">{item.description}</p>
                  </div>
                )}

                {/* Desktop text (centered) */}
                <div class="hidden md:block text-center">
                  <p class="ds-h3">{item.value}</p>
                  <p class="ds-p-2">{item.description}</p>
                </div>
              </div>
            </>
          ))
        }
      </div>

      <!-- CTA Button and Info Text -->
      <div class="flex flex-col items-center gap-4">
        <p class="info-text text-ds-white">{info_text}</p>
        {
          cta_button?.[0] && (
            <a
              href={cta_button[0].link?.cached_url}
              class={`ds-button px-8 py-4 rounded-full hover:bg-opacity-90 transition-all
              ${cta_button[0].background_color ? `bg-${cta_button[0].background_color}` : "bg-ds-white"}
              ${cta_button[0].text_color ? `text-${cta_button[0].text_color}` : "text-ds-blue-600"}`}
            >
              {cta_button[0].text}
            </a>
          )
        }
      </div>
    </div>
  </div>
</section>

<style>
  .info-text {
    font-family: "Source Sans 3", sans-serif;
    font-size: 15px;
    line-height: auto;
    font-weight: 300;
    font-style: italic;
  }
</style>
