---
const { title, number, description, isOpen = false, isLast = false } = Astro.props;
const itemId = `accordion-item-${Math.random().toString(36).substring(2, 11)}`;
---

<div class={`border-t ${isLast ? 'border-b' : ''} border-ds-black accordion-item`}>
  <button 
    class="accordion-button w-full flex items-center justify-between py-4 text-left" 
    aria-expanded={isOpen ? "true" : "false"}
    aria-controls={itemId}
  >
    <div class="flex items-center">
      {number && <span class="ds-p-1 mr-2 !font-semibold">{number}.</span>}
      <span class="ds-p-1 !font-semibold">{title}</span>
    </div>
    <span class="accordion-icon ds-p-1">{isOpen ? "−" : "+"}</span>
  </button>
  
  <div 
    id={itemId}
    class="accordion-content overflow-hidden transition-all duration-300"
    style={isOpen ? "" : "max-height: 0px;"}
  >
    <div class="pb-6 pr-8">
      <p class="ds-p-2">{description}</p>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const accordionButtons = document.querySelectorAll('.accordion-button');
    
    accordionButtons.forEach(button => {
      button.addEventListener('click', () => {
        const isExpanded = button.getAttribute('aria-expanded') === 'true';
        const content = document.getElementById(button.getAttribute('aria-controls'));
        const icon = button.querySelector('.accordion-icon');
        
        if (!isExpanded) {
          const container = button.closest('.accordion-container');
          
          if (container) {
            const otherButtons = container.querySelectorAll('.accordion-button[aria-expanded="true"]');
            otherButtons.forEach(otherButton => {
              if (otherButton !== button) {
                otherButton.setAttribute('aria-expanded', 'false');
                otherButton.querySelector('.accordion-icon').textContent = '+';
                
                const otherContent = document.getElementById(otherButton.getAttribute('aria-controls'));
                if (otherContent) {
                  otherContent.style.maxHeight = '0px';
                }
              }
            });
          }
        }
        
        button.setAttribute('aria-expanded', isExpanded ? 'false' : 'true');
        
        if (isExpanded) {
          content.style.maxHeight = '0px';
          icon.textContent = '+';
        } else {
          content.style.maxHeight = content.scrollHeight + 'px';
          icon.textContent = '−';
        }
      });
    });
  });
</script>

<style>
  .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
  }
  
  [aria-expanded="true"] + .accordion-content {
    max-height: 1000px;
  }
</style> 