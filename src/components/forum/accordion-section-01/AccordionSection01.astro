---
import { convertToWebP } from "../../../utils/imageConvert";
import AccordionComponent from "./AccordionComponent.astro";
import { Image } from "astro:assets";
import arrowLeft from "../../../assets/arrow-left.png";
import arrowRight from "../../../assets/arrow-right.png";

const {
  title,
  description,
  accordions,
  image,
  image_carousel,
  is_accordion_left = true,
  accordion_proportion = "60",
  styling,
} = Astro.props;

const padding_top = styling?.[0]?.padding_top || "md";
const padding_bottom = styling?.[0]?.padding_bottom || "md";
const padding_left = styling?.[0]?.padding_left || "";
const padding_right = styling?.[0]?.padding_right || "";
const mobile_padding_top = styling?.[0]?.mobile_padding_top || "xs";
const mobile_padding_bottom = styling?.[0]?.mobile_padding_bottom || "xs";
const mobile_padding_left = styling?.[0]?.mobile_padding_left || "";
const mobile_padding_right = styling?.[0]?.mobile_padding_right || "";
const background_color = styling?.[0]?.background_color || "";
const max_width = styling?.[0]?.max_width || "1695";

const padding_classes = `
  ${mobile_padding_top ? `pt-${mobile_padding_top}` : ""}
  ${mobile_padding_bottom ? `pb-${mobile_padding_bottom}` : ""}
  ${mobile_padding_left ? `pl-${mobile_padding_left}` : ""}
  ${mobile_padding_right ? `pr-${mobile_padding_right}` : ""}
  ${padding_top ? `lg:pt-${padding_top}` : ""}
  ${padding_bottom ? `lg:pb-${padding_bottom}` : ""}
  ${padding_left ? `lg:pl-${padding_left}` : ""}
  ${padding_right ? `lg:pr-${padding_right}` : ""}
`;

const bg_color_class = background_color ? `bg-${background_color}` : "";
const max_width_class = max_width ? `max-w-[${max_width}px]` : "";
const image_proportion = 100 - accordion_proportion;
const accordionWidthClass = `w-[${accordion_proportion}%]`;
const imageWidthClass = `w-[${image_proportion}%]`;
---

<section class={`${padding_classes} ${bg_color_class}`}>
  <div class={`${max_width_class} mx-auto px-4 lg:px-8`}>
    {title && <p class="ds-h3 lg:ds-h4 mb-12">{title}</p>}

    <div
      class={`flex flex-col ${is_accordion_left ? "lg:flex-row" : "lg:flex-row-reverse"} gap-4 lg:gap-16`}
    >
      {/* Accordion Side */}
      <div class={`w-full lg:${accordionWidthClass} accordion-side`}>
        {
          accordions.map((accordion) => (
            <AccordionComponent
              title={accordion.title}
              description={accordion.description}
              items={accordion.items}
            />
          ))
        }
      </div>

      {/* Image Side */}
      <div class={`w-full lg:${imageWidthClass} image-container`}>
        {
          image && !image_carousel.length && (
            <div class="aspect-square md:aspect-auto overflow-hidden">
              <img loading="lazy" 
                src={convertToWebP(image.filename)}
                alt={image.alt || ""}
                class="w-full h-full object-cover dynamic-image"
              />
            </div>
          )
        }

        {
          image_carousel.length ? (
            <div class="aspect-square lg:aspect-auto overflow-hidden lg:-ml-12">
              <div class="swiper imageSwiper h-full hidden lg:block">
                <div class="swiper-wrapper h-full">
                  {image_carousel.map((image) => (
                    <div class="swiper-slide">
                      <img loading="lazy" 
                        src={convertToWebP(image.filename)}
                        alt={image.alt || ""}
                        class="w-[80%] h-full object-cover dynamic-image mx-auto"
                      />
                    </div>
                  ))}
                </div>
                <div class="swiper-button-prev after:text-black after:font-bold after:text-5xl scale-50 lg:scale-100">
                  <Image src={arrowLeft} alt="Previous" />
                </div>
                <div class="swiper-button-next after:text-black after:font-bold after:text-5xl scale-50 lg:scale-100">
                  <Image src={arrowRight} alt="Next" />
                </div>
              </div>

              <img loading="lazy" 
                src={convertToWebP(image_carousel[0].filename)}
                alt={image_carousel[0].alt || ""}
                class="w-full h-full object-cover dynamic-image lg:hidden"
              />
            </div>
          ) : null
        }
      </div>
    </div>
  </div>
</section>

<script>
  import { Swiper } from "swiper";
  import { Navigation } from "swiper/modules";
  import "swiper/css";
  import "swiper/css/navigation";

  // Initialize Swiper
  new Swiper(".imageSwiper", {
    modules: [Navigation],
    navigation: {
      nextEl: ".swiper-button-next",
      prevEl: ".swiper-button-prev",
    },
  });

  // Image height adjustment function
  function adjustImageHeight() {
    const accordionSections = document.querySelectorAll(".accordion-section");
    const imageContainers = document.querySelectorAll(".image-container");

    accordionSections.forEach((accordionSection, index) => {
      const imageContainer = imageContainers[index];
      if (imageContainer) {
        const image = imageContainer.querySelector(".dynamic-image");
        if (image) {
          const accordionHeight = accordionSection.offsetHeight;
          const newImageHeight = accordionHeight;

          image.style.height = `${newImageHeight}px`;
          image.style.objectFit = "cover";
        }
      }
    });
  }

  // Run on load and resize
  document.addEventListener("DOMContentLoaded", () => {
    adjustImageHeight();
  });
</script>

<style>
  .swiper-button-next::after,
  .swiper-button-prev::after {
    content: "";
  }
</style>
