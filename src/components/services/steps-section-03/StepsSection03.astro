---
import { convertToWebP } from "../../../utils/imageConvert";
import { renderRichText } from "@storyblok/astro";
import StepsVue from "./StepsVue.vue";
import AccordionVue from "./AccordionVue.vue";

const { steps, styling } = Astro.props;

const renderedSteps = steps.map((step) => ({
  ...step,
  title: renderRichText(step.title),
  description: renderRichText(step.description),
  accordions: step.accordions.map((accordion) => ({
    ...accordion,
    title: renderRichText(accordion.title),
    description: renderRichText(accordion.description),
  })),
}));

// Your styling classes setup
const padding_top = styling?.[0]?.padding_top || "xs";
const padding_bottom = styling?.[0]?.padding_bottom || "xs";
const mobile_padding_top = styling?.[0]?.mobile_padding_top || "xs";
const mobile_padding_bottom = styling?.[0]?.mobile_padding_bottom || "xs";

const padding_top_class = `lg:pt-${padding_top}`;
const padding_bottom_class = `lg:pb-${padding_bottom}`;
const mobile_padding_top_class = `pt-${mobile_padding_top}`;
const mobile_padding_bottom_class = `pb-${mobile_padding_bottom}`;
---

<section
  class={`${mobile_padding_top_class} ${mobile_padding_bottom_class} ${padding_top_class} ${padding_bottom_class}`}
>
  <div class="container mx-auto px-4 lg:px-8">
    <StepsVue client:load steps={renderedSteps}>
      <AccordionVue client:load />
    </StepsVue>
  </div>
</section>

<style>
  .accordion-content {
    transition: max-height 0.3s ease-out;
  }
</style>
