---
import { convertToWebP } from "../../../utils/imageConvert";
import Button from "../../common/Button.astro";

const { title, description, cta_button, image, styling, content_proportion } = Astro.props;

const padding_top = styling?.[0]?.padding_top || "xs";
const padding_bottom = styling?.[0]?.padding_bottom || "xs";
const padding_left = styling?.[0]?.padding_left || "xs";
const padding_right = styling?.[0]?.padding_right || "xs";
const mobile_padding_top = styling?.[0]?.mobile_padding_top || "xs";
const mobile_padding_bottom = styling?.[0]?.mobile_padding_bottom || "xs";
const mobile_padding_left = styling?.[0]?.mobile_padding_left || "xs";
const mobile_padding_right = styling?.[0]?.mobile_padding_right || "xs";
const background_color = styling?.[0]?.background_color || "";
const max_width = styling?.[0]?.max_width || "";

const padding_classes = `
  pt-${mobile_padding_top} pb-${mobile_padding_bottom}
  pl-${mobile_padding_left} pr-${mobile_padding_right}
  lg:pt-${padding_top} lg:pb-${padding_bottom}
  lg:pl-${padding_left} lg:pr-${padding_right}
`;

const bg_color_class = background_color ? `bg-${background_color}` : "";
const max_width_class = max_width ? `max-w-[${max_width}px]` : "";
const gap_class = styling?.[0]?.gap ? `gap-${styling?.[0]?.gap}` : "";
const content_proportion_class = content_proportion ? `lg:w-[${content_proportion}%]` : "lg:w-[55%]";
const image_proportion_class = content_proportion ? `lg:w-[${100 - content_proportion}%]` : "lg:w-[45%]";
---

<section
  class={`relative ${padding_classes} ${bg_color_class} ${max_width_class} mx-auto`}
>
  <div class={`mx-auto ${max_width_class}`}>
    <div class={`flex flex-col lg:flex-row ${gap_class} items-center`}>
      {/* Content */}
      <div class={`${content_proportion_class} text-center lg:text-left z-10`}>
        <h2 class="ds-h2 2xl:ds-h1 !font-bold uppercase">{title}</h2>
        <p class="ds-p-2 md:ds-p-1 mt-8 lg:mt-12">
          {description}
        </p>
        {
          cta_button?.[0] && (
            <div class="mt-8 lg:mt-12">
              <Button
                text={cta_button[0].text}
                link={cta_button[0].link}
                style={cta_button[0].style}
                background_color={cta_button[0].background_color}
                text_color={cta_button[0].text_color}
              />
            </div>
          )
        }
      </div>

      {/* Image */}
      <div class={`${image_proportion_class} hidden lg:block`}>
        <div class="relative w-full h-full">
          <img
            src={convertToWebP(image.filename)}
            alt={image.alt || ""}
            class="w-full h-auto object-contain"
          />
        </div>
      </div>
    </div>
  </div>
</section>
