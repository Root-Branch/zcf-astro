---
const { nav_items = [], site_logo, contact_button } = Astro.props;
import { convertToWebP } from "../../utils/imageConvert";
import Button from "../common/Button.astro";

const currentPath = Astro.url.pathname;
---

<header class="py-8 xl:py-10 px-4 overflow-x-hidden relative">
  <nav class="container mx-auto flex justify-between items-center">
    <a href="/" aria-label="Go to homepage">
      <img
        src={convertToWebP(site_logo.filename)}
        alt={site_logo.alt}
        class="h-[64px]"
      />
    </a>
    <!-- Hamburger button for mobile -->
    <button
      class="xl:hidden z-50 space-y-2"
      aria-label="Toggle menu"
      id="menu-toggle"
    >
      <div class="w-8 h-0.5 bg-black transition-all"></div>
      <div class="w-8 h-0.5 bg-black transition-all"></div>
      <div class="w-8 h-0.5 bg-black transition-all"></div>
    </button>

    <!-- Navigation menu -->
    <div
      class="flex flex-col xl:flex-row xl:items-center xl:relative
      fixed top-0 right-0 h-[100vh] xl:h-auto xl:w-auto w-[300px]
      xl:bg-transparent bg-white xl:p-0 py-24 px-8 transition-transform xl:translate-x-0 translate-x-full z-40"
      id="nav-menu"
    >
      <div class="xl:mr-10 mb-10 xl:mb-0">
        <ul
          class="flex xl:flex-row flex-col gap-8 xl:items-center w-full nav-list"
        >
          {
            nav_items?.map((item) => {
              const itemPath = new URL(item.nav_item_link.url, Astro.url).pathname;
              const isActive = 
                (currentPath === itemPath) || 
                (itemPath !== '/' && currentPath.startsWith(itemPath));
              
              return (
                <li class="ds-header nav-item">
                  <a 
                    href={item.nav_item_link.url} 
                    class={`nav-link ${isActive ? 'active' : ''}`}
                    aria-current={isActive ? 'page' : undefined}
                  >
                    {item.nav_item_label}
                  </a>
                </li>
              );
            })
          }
        </ul>
      </div>
      <div>
        {
          contact_button?.[0] && (
            <Button
              text={contact_button[0].text}
              link={contact_button[0].link}
              style={contact_button[0].style}
              text_color={contact_button[0].text_color}
              background_color={contact_button[0].background_color}
            />
          )
        }
      </div>
    </div>
  </nav>
</header>

<script>
  const menuToggle = document.getElementById("menu-toggle");
  const navMenu = document.getElementById("nav-menu");
  const menuBars = menuToggle?.getElementsByTagName("div");

  menuToggle?.addEventListener("click", () => {
    navMenu?.classList.toggle("translate-x-full");
    navMenu?.classList.toggle("translate-x-0");

    // Animate hamburger to X
    if (menuBars) {
      menuBars[0].classList.toggle("rotate-45");
      menuBars[0].classList.toggle("translate-y-2.5");
      menuBars[1].classList.toggle("opacity-0");
      menuBars[2].classList.toggle("-rotate-45");
      menuBars[2].classList.toggle("-translate-y-2.5");
    }
  });
</script>

<style>
  #menu-toggle div {
    transform-origin: center;
  }
  
  .nav-list li, 
  .nav-list a {
    display: inline-block;
  }
  
  .nav-link {
    letter-spacing: 0.235px;
    padding-left: 2px;
    padding-right: 2px;
    transition: all 0.2s ease;
  }
  
  .nav-link:hover, 
  .nav-link:focus,
  .nav-link.active {
    font-weight: bold;
    letter-spacing: 0;
    text-decoration: underline;
  }
  
  @media (max-width: 1279px) {
    .nav-list li {
      display: block;
      width: 100%;
    }
    
    .nav-link {
      display: block;
      padding-left: 0;
      padding-right: 0;
    }
  }
</style>
