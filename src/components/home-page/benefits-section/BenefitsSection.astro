---
import { convertToWebP } from "../../../utils/imageConvert";
import BenefitItem from "./BenefitItem.astro";
import Button from "../../common/Button.astro";

const { 
  heading, 
  benefits, 
  cta_button, 
  background_color, 
  padding_top, 
  padding_bottom, 
  mobile_padding_top, 
  mobile_padding_bottom,
  title_font
} = Astro.props;

const background_color_class = background_color ? `bg-${background_color}` : "bg-ds-blue-900";
const padding_top_class = padding_top ? `lg:pt-${padding_top}` : "lg:pt-16";
const padding_bottom_class = padding_bottom ? `lg:pb-${padding_bottom}` : "lg:pb-32";
const mobile_padding_top_class = mobile_padding_top ? `pt-${mobile_padding_top}` : "pt-8";
const mobile_padding_bottom_class = mobile_padding_bottom ? `pb-${mobile_padding_bottom}` : "pb-16";
---

<section class={`${background_color_class} ${mobile_padding_top_class} ${mobile_padding_bottom_class} ${padding_top_class} ${padding_bottom_class}`}>
  <div class="max-w-[1170px] mx-auto px-4 text-center">
    <h2 class="ds-h2 md:ds-h3 text-ds-white mb-20">{heading}</h2>

    <div class="grid grid-cols-1 md:grid-cols-3 gap-16 md:gap-8 mb-16">
      {benefits?.map((benefit) => (
        <BenefitItem {...benefit} />
      ))}
    </div>

    {cta_button?.[0] && (
      <Button
        text={cta_button[0].text}
        link={cta_button[0].link}
        style={cta_button[0].style}
        background_color={cta_button[0].background_color}
        text_color={cta_button[0].text_color}
      />
    )}
  </div>
</section> 